{"version":3,"file":"static/js/803.fd4079aa.chunk.js","mappings":"+UAoBA,EAbe,CACb,CAAEA,KAAM,IAAKC,OAAO,EAAMC,KAAM,QAEhC,CAAEF,KAAM,wBAAyBE,KAAM,cAAeC,QARpCC,EAAAA,MAAW,kBAAM,sDAA4C,KAS/E,CAAEJ,KAAM,IAAKE,KAAM,aAAcC,QARhBC,EAAAA,MAAW,kBAAM,sDAA2C,KAS7E,CAAEJ,KAAM,oBAAqBE,KAAM,YAAaC,QARhCC,EAAAA,MAAW,kBAAM,qDAAwC,KASzE,CAAEJ,KAAM,oBAAqBE,KAAM,YAAaC,QARhCC,EAAAA,MAAW,kBAAM,qDAAwC,M,sBCErEC,EAAgB,WACpB,IAAMC,GAAkBC,EAAAA,EAAAA,MAAcC,SAuBhCC,EAhBiB,SAACC,GACtB,IAAMD,EAAc,GAYpB,OAXAC,EAASC,MAAM,KAAKC,QAAO,SAACC,EAAMC,EAAMC,EAAOC,GAC7C,IAAMC,EAAe,GAAAC,OAAML,EAAI,KAAAK,OAAIJ,GAC7BK,EATW,SAACX,EAAUY,GAC9B,IAAMC,EAAeD,EAAOE,MAAK,SAACC,GAAK,OAAKA,EAAMvB,OAASQ,CAAQ,IACnE,QAAOa,GAAeA,EAAanB,IACrC,CAMsBsB,CAAaP,EAAiBG,GAOhD,OANAD,GACEV,EAAYgB,KAAK,CACfjB,SAAUS,EACVf,KAAMiB,EACNO,OAAQX,EAAQ,IAAMC,EAAMW,SAEzBV,CACT,IACOR,CACT,CAEoBmB,CAAetB,GAEnC,OACEuB,EAAAA,EAAAA,MAACC,EAAAA,GAAW,CAACC,UAAU,WAAUC,SAAA,EAC/BC,EAAAA,EAAAA,KAACC,EAAAA,GAAe,CAACC,KAAK,IAAGH,SAAC,SACzBvB,EAAY2B,KAAI,SAACC,EAAYtB,GAC5B,OACEuB,EAAAA,EAAAA,eAACJ,EAAAA,IAAeK,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACTF,EAAWX,OAAS,CAAEA,QAAQ,GAAS,CAAES,KAAME,EAAW7B,WAAU,IACzEgC,IAAKzB,IAEJsB,EAAWnC,KAGlB,MAGN,EAEA,EAAeE,EAAAA,KAAWC,GC3CpBoC,EAAa,WACjB,OACER,EAAAA,EAAAA,KAACS,EAAAA,GAAU,CAACC,IAAE,EAAAX,UACZC,EAAAA,EAAAA,KAACW,EAAAA,SAAQ,CAACC,UAAUZ,EAAAA,EAAAA,KAACa,EAAAA,GAAQ,CAACC,MAAM,YAAaf,UAC/CH,EAAAA,EAAAA,MAACmB,EAAAA,GAAM,CAAAhB,SAAA,CACJZ,EAAAA,KAAW,SAACG,EAAO0B,GAClB,OACE1B,EAAMpB,UACJ8B,EAAAA,EAAAA,KAACiB,EAAAA,GAAK,CAEJlD,KAAMuB,EAAMvB,KACZC,MAAOsB,EAAMtB,MACbC,KAAMqB,EAAMrB,KACZC,SAAS8B,EAAAA,EAAAA,KAACV,EAAMpB,QAAO,KAJlB8C,EAQb,KACAhB,EAAAA,EAAAA,KAACiB,EAAAA,GAAK,CAAClD,KAAK,IAAIG,SAAS8B,EAAAA,EAAAA,KAACkB,EAAAA,GAAQ,CAACC,GAAG,YAAYC,SAAO,YAKnE,EAEA,EAAejD,EAAAA,KAAWqC,G,iCCkC1B,G,IA9CkB,WAChB,IAAMa,GAAWC,EAAAA,EAAAA,MACXC,GAAcC,EAAAA,EAAAA,KAAY,SAACC,GAAK,OAAKA,EAAMF,WAAW,IAE5D,OACE3B,EAAAA,EAAAA,MAAC8B,EAAAA,GAAO,CAACC,SAAS,SAAS7B,UAAU,OAAMC,SAAA,EACzCC,EAAAA,EAAAA,KAACS,EAAAA,GAAU,CAACmB,OAAK,EAAA7B,UACfC,EAAAA,EAAAA,KAAC6B,EAAAA,GAAc,CACb/B,UAAU,OACVgC,QAAS,kBAAMT,EAAS,CAAEU,KAAM,MAAOR,aAAcA,GAAc,EAACxB,UAEpEC,EAAAA,EAAAA,KAACgC,EAAAA,EAAK,CAACC,KAAMC,EAAAA,EAASC,KAAK,YA2B/BnC,EAAAA,EAAAA,KAACoC,EAAAA,GAAc,KACfpC,EAAAA,EAAAA,KAACS,EAAAA,GAAU,CAACmB,OAAK,EAAA7B,UACfC,EAAAA,EAAAA,KAAC5B,EAAa,QAItB,G,+FC1DaiE,EAAgB,SAAHC,GAAmB,IAAbC,EAAKD,EAALC,MACxB9D,GAAWH,EAAAA,EAAAA,MACXkE,EAAU,SAACvE,EAAMgE,EAAMQ,GAC3B,OACE7C,EAAAA,EAAAA,MAAA8C,EAAAA,SAAA,CAAA3C,SAAA,CACGkC,GAAQA,EACRhE,GAAQA,EACRwE,IACCzC,EAAAA,EAAAA,KAAC2C,EAAAA,GAAM,CAAC7B,MAAO2B,EAAM3B,MAAOhB,UAAU,UAASC,SAC5C0C,EAAMG,SAKjB,EAEMC,EAAU,SAACC,EAAMhE,GACrB,IAAQiE,EAA0CD,EAA1CC,UAAW9E,EAA+B6E,EAA/B7E,KAAMwE,EAAyBK,EAAzBL,MAAOR,EAAkBa,EAAlBb,KAASe,GAAIC,EAAAA,EAAAA,GAAKH,EAAII,GAChDC,EAAYJ,EAClB,OACE1C,EAAAA,EAAAA,eAAC8C,GAAS7C,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACH0C,EAAK7B,KACP6B,EAAKT,OAAS,CACbQ,UAAWK,EAAAA,KACZ,IACH7C,IAAKzB,GACDkE,GAEHR,EAAQvE,EAAMgE,EAAMQ,GAG3B,EACMY,EAAW,SAAXA,EAAYP,EAAMhE,GAAW,IAADwE,EACxBP,EAAuCD,EAAvCC,UAAW9E,EAA4B6E,EAA5B7E,KAAMgE,EAAsBa,EAAtBb,KAAMd,EAAgB2B,EAAhB3B,GAAO6B,GAAIC,EAAAA,EAAAA,GAAKH,EAAIS,GAC7CJ,EAAYJ,EAClB,OACE/C,EAAAA,EAAAA,KAACmD,GAAS7C,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,CACRU,IAAKwC,OAAO1E,GAEZ2E,QAASjB,EAAQvE,EAAMgE,GACvByB,QAASjF,EAASF,SAASoF,WAAWxC,IAClC6B,GAAI,IAAAjD,SAEG,QAFHuD,EAEPR,EAAKP,aAAK,IAAAe,OAAA,EAAVA,EAAYnD,KAAI,SAAC2C,EAAMhE,GAAK,OAC3BgE,EAAKP,MAAQc,EAASP,EAAMhE,GAAS+D,EAAQC,EAAMhE,EAAM,MANtDA,EAUX,EAEA,OACEkB,EAAAA,EAAAA,KAAC7B,EAAAA,SAAc,CAAA4B,SACZwC,GACCA,EAAMpC,KAAI,SAAC2C,EAAMhE,GAAK,OAAMgE,EAAKP,MAAQc,EAASP,EAAMhE,GAAS+D,EAAQC,EAAMhE,EAAM,KAG7F,EC9Da8E,EAAS,CACpB,UAAU,w7B,iCC2BZ,EArBa,CACX,CACEb,UAAWc,EAAAA,GACX5F,KAAM,QACNgE,MAAMjC,EAAAA,EAAAA,KAACgC,EAAAA,EAAK,CAACC,KAAM6B,EAAAA,EAASC,gBAAgB,aAC5CxB,MAAO,CACL,CACEQ,UAAWiB,EAAAA,GACX/F,KAAM,aACNkD,GAAI,KAEN,CACE4B,UAAWiB,EAAAA,GACX/F,KAAM,SACNkD,GAAI,wBCJN8C,EAAa,WACjB,IAAM5C,GAAWC,EAAAA,EAAAA,MACX4C,GAAa1C,EAAAA,EAAAA,KAAY,SAACC,GAAK,OAAKA,EAAM0C,iBAAiB,IAC3D5C,GAAcC,EAAAA,EAAAA,KAAY,SAACC,GAAK,OAAKA,EAAMF,WAAW,IAE5D,OACE3B,EAAAA,EAAAA,MAACwE,EAAAA,GAAQ,CACPzC,SAAS,QACTuC,WAAYA,EACZR,QAASnC,EACT8C,gBAAiB,SAACX,GAChBrC,EAAS,CAAEU,KAAM,MAAOR,YAAamC,GACvC,EAAE3D,SAAA,EAEFH,EAAAA,EAAAA,MAAC0E,EAAAA,GAAa,CAACxE,UAAU,mBAAmBqB,GAAG,IAAGpB,SAAA,EAEhDC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,WACJC,EAAAA,EAAAA,KAACgC,EAAAA,EAAK,CAAClC,UAAU,uBAAuBmC,KAAM2B,EAAQW,OAAQ,SAEhEvE,EAAAA,EAAAA,KAACwE,EAAAA,GAAW,CAAAzE,UACVC,EAAAA,EAAAA,KAACyE,EAAAA,EAAS,CAAA1E,UACRC,EAAAA,EAAAA,KAACqC,EAAa,CAACE,MAAOmC,SAG1B1E,EAAAA,EAAAA,KAAC2E,EAAAA,GAAe,CACd7E,UAAU,mBACVgC,QAAS,kBAAMT,EAAS,CAAEU,KAAM,MAAOoC,mBAAoBD,GAAa,MAIhF,EAEA,EAAe/F,EAAAA,KAAW8F,GC3CpBW,EAAc,SAACC,GACnB,IAAQ9E,EAAmB8E,EAAnB9E,SAAUG,EAAS2E,EAAT3E,KAEP,gCAAAjB,OAAmCiB,GAE9C,OACEF,EAAAA,EAAAA,KAAA,OAAKF,UAAU,UAASC,UACtBC,EAAAA,EAAAA,KAAC8E,EAAAA,GAAW,CAAChF,UAAU,iBAAgBC,UACrCC,EAAAA,EAAAA,KAAC+E,EAAAA,GAAQ,CAACjF,UAAU,cAAc4D,SAAO,EAAA3D,SACtCA,OAKX,EAOA,EAAe5B,EAAAA,KAAWyG,E,kECT1B,UAfsB,WACpB,OACEhF,EAAAA,EAAAA,MAAA,OAAAG,SAAA,EACEC,EAAAA,EAAAA,KAACiE,EAAAA,GAAU,KACXrE,EAAAA,EAAAA,MAAA,OAAKE,UAAU,iDAAgDC,SAAA,EAC7DC,EAAAA,EAAAA,KAACgF,EAAAA,GAAS,KACVhF,EAAAA,EAAAA,KAAA,OAAKF,UAAU,wBAAuBC,UACpCC,EAAAA,EAAAA,KAACQ,EAAAA,GAAU,WAMrB,C","sources":["routes.js","components/AppBreadcrumb.js","components/AppContent.js","components/AppHeader.js","components/AppSidebarNav.js","assets/brand/sygnet.js","_nav.js","components/AppSidebar.js","components/DocsExample.js","layout/DefaultLayout.js"],"sourcesContent":["import React from 'react'\n\nconst AddCategory = React.lazy(() => import('./views/pages/Category/AddCategory'))\nconst Categories = React.lazy(() => import('./views/pages/Category/Categories'))\nconst AddMovies = React.lazy(() => import('./views/pages/Movies/AddMovies'))\nconst MovieList = React.lazy(() => import('./views/pages/Movies/MovieList'))\n\nconst routes = [\n  { path: '/', exact: true, name: 'Home' },\n \n  { path: '/Category/AddCategory', name: 'AddCategory', element: AddCategory },\n  { path: '/', name: 'Categories', element: Categories },\n  { path: '/Movies/AddMovies', name: 'AddMovies', element: AddMovies },\n  { path: '/Movies/MovieList', name: 'MovieList', element: MovieList },\n\n\n\n\n]\n\nexport default routes\n","import React from 'react'\nimport { useLocation } from 'react-router-dom'\n\nimport routes from '../routes'\n\nimport { CBreadcrumb, CBreadcrumbItem } from '@coreui/react'\n\nconst AppBreadcrumb = () => {\n  const currentLocation = useLocation().pathname\n\n  const getRouteName = (pathname, routes) => {\n    const currentRoute = routes.find((route) => route.path === pathname)\n    return currentRoute ? currentRoute.name : false\n  }\n\n  const getBreadcrumbs = (location) => {\n    const breadcrumbs = []\n    location.split('/').reduce((prev, curr, index, array) => {\n      const currentPathname = `${prev}/${curr}`\n      const routeName = getRouteName(currentPathname, routes)\n      routeName &&\n        breadcrumbs.push({\n          pathname: currentPathname,\n          name: routeName,\n          active: index + 1 === array.length ? true : false,\n        })\n      return currentPathname\n    })\n    return breadcrumbs\n  }\n\n  const breadcrumbs = getBreadcrumbs(currentLocation)\n\n  return (\n    <CBreadcrumb className=\"m-0 ms-2\">\n      <CBreadcrumbItem href=\"/\">Home</CBreadcrumbItem>\n      {breadcrumbs.map((breadcrumb, index) => {\n        return (\n          <CBreadcrumbItem\n            {...(breadcrumb.active ? { active: true } : { href: breadcrumb.pathname })}\n            key={index}\n          >\n            {breadcrumb.name}\n          </CBreadcrumbItem>\n        )\n      })}\n    </CBreadcrumb>\n  )\n}\n\nexport default React.memo(AppBreadcrumb)\n","import React, { Suspense } from 'react'\nimport { Navigate, Route, Routes } from 'react-router-dom'\nimport { CContainer, CSpinner } from '@coreui/react'\n\n// routes config\nimport routes from '../routes'\n\nconst AppContent = () => {\n  return (\n    <CContainer lg>\n      <Suspense fallback={<CSpinner color=\"primary\" />}>\n        <Routes>\n          {routes.map((route, idx) => {\n            return (\n              route.element && (\n                <Route\n                  key={idx}\n                  path={route.path}\n                  exact={route.exact}\n                  name={route.name}\n                  element={<route.element />}\n                />\n              )\n            )\n          })}\n          <Route path=\"/\" element={<Navigate to=\"dashboard\" replace />} />\n        </Routes>\n      </Suspense>\n    </CContainer>\n  )\n}\n\nexport default React.memo(AppContent)\n","import React from 'react'\nimport { NavLink } from 'react-router-dom'\nimport { useSelector, useDispatch } from 'react-redux'\nimport {\n  CContainer,\n  CHeader,\n  CHeaderBrand,\n  CHeaderDivider,\n  CHeaderNav,\n  CHeaderToggler,\n  CNavLink,\n  CNavItem,\n} from '@coreui/react'\nimport CIcon from '@coreui/icons-react'\nimport { cilBell, cilEnvelopeOpen, cilList, cilMenu } from '@coreui/icons'\n\nimport { AppBreadcrumb } from './index'\nimport { AppHeaderDropdown } from './header/index'\nimport { logo } from 'src/assets/brand/logo'\n\nconst AppHeader = () => {\n  const dispatch = useDispatch()\n  const sidebarShow = useSelector((state) => state.sidebarShow)\n\n  return (\n    <CHeader position=\"sticky\" className=\"mb-4\">\n      <CContainer fluid>\n        <CHeaderToggler\n          className=\"ps-1\"\n          onClick={() => dispatch({ type: 'set', sidebarShow: !sidebarShow })}\n        >\n          <CIcon icon={cilMenu} size=\"lg\" />\n        </CHeaderToggler>\n        {/* <CHeaderBrand className=\"mx-auto d-md-none\" to=\"/\">\n          <CIcon icon={logo} height={48} alt=\"Logo\" />\n        </CHeaderBrand> */}\n       \n        {/* <CHeaderNav>\n          <CNavItem>\n            <CNavLink href=\"#\">\n              <CIcon icon={cilBell} size=\"lg\" />\n            </CNavLink>\n          </CNavItem>\n          <CNavItem>\n            <CNavLink href=\"#\">\n              <CIcon icon={cilList} size=\"lg\" />\n            </CNavLink>\n          </CNavItem>\n          <CNavItem>\n            <CNavLink href=\"#\">\n              <CIcon icon={cilEnvelopeOpen} size=\"lg\" />\n            </CNavLink>\n          </CNavItem>\n        </CHeaderNav> */}\n        {/* <CHeaderNav className=\"ms-3\">\n          <AppHeaderDropdown />\n        </CHeaderNav> */}\n      </CContainer>\n      <CHeaderDivider />\n      <CContainer fluid>\n        <AppBreadcrumb />\n      </CContainer>\n    </CHeader>\n  )\n}\n\nexport default AppHeader\n","import React from 'react'\nimport { NavLink, useLocation } from 'react-router-dom'\nimport PropTypes from 'prop-types'\n\nimport { CBadge } from '@coreui/react'\n\nexport const AppSidebarNav = ({ items }) => {\n  const location = useLocation()\n  const navLink = (name, icon, badge) => {\n    return (\n      <>\n        {icon && icon}\n        {name && name}\n        {badge && (\n          <CBadge color={badge.color} className=\"ms-auto\">\n            {badge.text}\n          </CBadge>\n        )}\n      </>\n    )\n  }\n\n  const navItem = (item, index) => {\n    const { component, name, badge, icon, ...rest } = item\n    const Component = component\n    return (\n      <Component\n        {...(rest.to &&\n          !rest.items && {\n            component: NavLink,\n          })}\n        key={index}\n        {...rest}\n      >\n        {navLink(name, icon, badge)}\n      </Component>\n    )\n  }\n  const navGroup = (item, index) => {\n    const { component, name, icon, to, ...rest } = item\n    const Component = component\n    return (\n      <Component\n        idx={String(index)}\n        key={index}\n        toggler={navLink(name, icon)}\n        visible={location.pathname.startsWith(to)}\n        {...rest}\n      >\n        {item.items?.map((item, index) =>\n          item.items ? navGroup(item, index) : navItem(item, index),\n        )}\n      </Component>\n    )\n  }\n\n  return (\n    <React.Fragment>\n      {items &&\n        items.map((item, index) => (item.items ? navGroup(item, index) : navItem(item, index)))}\n    </React.Fragment>\n  )\n}\n\nAppSidebarNav.propTypes = {\n  items: PropTypes.arrayOf(PropTypes.any).isRequired,\n}\n","export const sygnet = [\n  '160 160',\n  `\n  <title>coreui logo</title>\n  <g>\n    <g style=\"fill:#fff;\">\n      <path d=\"M125,47.091,86,24.5743a12,12,0,0,0-12,0L35,47.091a12.0336,12.0336,0,0,0-6,10.3923v45.0334a12.0335,12.0335,0,0,0,6,10.3923l39,22.5166a11.9993,11.9993,0,0,0,12,0l39-22.5166a12.0335,12.0335,0,0,0,6-10.3923V57.4833A12.0336,12.0336,0,0,0,125,47.091Zm-2,55.4257a4,4,0,0,1-2,3.464L82,128.4974a4,4,0,0,1-4,0L39,105.9807a4,4,0,0,1-2-3.464V57.4833a4,4,0,0,1,2-3.4641L78,31.5025a4,4,0,0,1,4,0l39,22.5167a4,4,0,0,1,2,3.4641Z\"/>\n      <path d=\"M103.0216,93.0379h-2.866a4,4,0,0,0-1.9246.4935L80.95,103.0167,61,91.4981V68.5206L80.95,57.002l17.2894,9.455a4,4,0,0,0,1.9192.4905h2.8632a2,2,0,0,0,2-2V62.2357a2,2,0,0,0-1.04-1.7547L84.793,49.9854a8.0391,8.0391,0,0,0-7.8428.09L57,61.5929A8.0243,8.0243,0,0,0,53,68.5216v22.976a8,8,0,0,0,4,6.9283l19.95,11.5185a8.0422,8.0422,0,0,0,7.8433.0879l19.19-10.5311a2,2,0,0,0,1.0378-1.7534v-2.71A2,2,0,0,0,103.0216,93.0379Z\"/>\n    </g>\n  </g>\n`,\n]\n","import React from 'react'\nimport CIcon from '@coreui/icons-react'\nimport {\n  cilStar,\n} from '@coreui/icons'\nimport { CNavGroup, CNavItem, CNavTitle } from '@coreui/react'\n\nconst _nav = [\n  {\n    component: CNavGroup,\n    name: 'Pages',\n    icon: <CIcon icon={cilStar} customClassName=\"nav-icon\" />,\n    items: [\n      {\n        component: CNavItem,\n        name: 'Categories',\n        to: '/',\n      },\n      {\n        component: CNavItem,\n        name: 'Movies',\n        to: '/Movies/MovieList',\n      }\n\n    ],\n  }\n]\n\nexport default _nav\n","import React from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\n\nimport { CSidebar, CSidebarBrand, CSidebarNav, CSidebarToggler } from '@coreui/react'\nimport CIcon from '@coreui/icons-react'\n\nimport { AppSidebarNav } from './AppSidebarNav'\n\nimport { logoNegative } from 'src/assets/brand/logo-negative'\nimport { sygnet } from 'src/assets/brand/sygnet'\n\nimport SimpleBar from 'simplebar-react'\nimport 'simplebar/dist/simplebar.min.css'\n\n// sidebar nav config\nimport navigation from '../_nav'\n\nconst AppSidebar = () => {\n  const dispatch = useDispatch()\n  const unfoldable = useSelector((state) => state.sidebarUnfoldable)\n  const sidebarShow = useSelector((state) => state.sidebarShow)\n\n  return (\n    <CSidebar\n      position=\"fixed\"\n      unfoldable={unfoldable}\n      visible={sidebarShow}\n      onVisibleChange={(visible) => {\n        dispatch({ type: 'set', sidebarShow: visible })\n      }}\n    >\n      <CSidebarBrand className=\"d-none d-md-flex\" to=\"/\">\n        {/* <CIcon className=\"sidebar-brand-full\" icon={logoNegative} height={35} /> */}\n        <h4>Admin</h4>\n        <CIcon className=\"sidebar-brand-narrow\" icon={sygnet} height={35} />\n      </CSidebarBrand>\n      <CSidebarNav>\n        <SimpleBar>\n          <AppSidebarNav items={navigation} />\n        </SimpleBar>\n      </CSidebarNav>\n      <CSidebarToggler\n        className=\"d-none d-lg-flex\"\n        onClick={() => dispatch({ type: 'set', sidebarUnfoldable: !unfoldable })}\n      />\n    </CSidebar>\n  )\n}\n\nexport default React.memo(AppSidebar)\n","import PropTypes from 'prop-types'\nimport React from 'react'\nimport { CNav, CNavItem, CNavLink, CTabContent, CTabPane } from '@coreui/react'\nimport CIcon from '@coreui/icons-react'\nimport { cilCode, cilMediaPlay } from '@coreui/icons'\n\nconst DocsExample = (props) => {\n  const { children, href } = props\n\n  const _href = `https://coreui.io/react/docs/${href}`\n\n  return (\n    <div className=\"example\">\n      <CTabContent className=\"rounded-bottom\">\n        <CTabPane className=\"p-3 preview\" visible>\n          {children}\n        </CTabPane>\n      </CTabContent>\n    </div>\n  )\n}\n\nDocsExample.propTypes = {\n  children: PropTypes.node,\n  href: PropTypes.string,\n}\n\nexport default React.memo(DocsExample)\n","import React from 'react'\nimport { AppContent, AppSidebar, AppFooter, AppHeader } from '../components/index'\n\nconst DefaultLayout = () => {\n  return (\n    <div>\n      <AppSidebar />\n      <div className=\"wrapper d-flex flex-column min-vh-100 bg-light\">\n        <AppHeader />\n        <div className=\"body flex-grow-1 px-3\">\n          <AppContent />\n        </div>\n        {/* <AppFooter /> */}\n      </div>\n    </div>\n  )\n}\n\nexport default DefaultLayout\n"],"names":["path","exact","name","element","React","AppBreadcrumb","currentLocation","useLocation","pathname","breadcrumbs","location","split","reduce","prev","curr","index","array","currentPathname","concat","routeName","routes","currentRoute","find","route","getRouteName","push","active","length","getBreadcrumbs","_jsxs","CBreadcrumb","className","children","_jsx","CBreadcrumbItem","href","map","breadcrumb","_createElement","_objectSpread","key","AppContent","CContainer","lg","Suspense","fallback","CSpinner","color","Routes","idx","Route","Navigate","to","replace","dispatch","useDispatch","sidebarShow","useSelector","state","CHeader","position","fluid","CHeaderToggler","onClick","type","CIcon","icon","cilMenu","size","CHeaderDivider","AppSidebarNav","_ref","items","navLink","badge","_Fragment","CBadge","text","navItem","item","component","rest","_objectWithoutProperties","_excluded","Component","NavLink","navGroup","_item$items","_excluded2","String","toggler","visible","startsWith","sygnet","CNavGroup","cilStar","customClassName","CNavItem","AppSidebar","unfoldable","sidebarUnfoldable","CSidebar","onVisibleChange","CSidebarBrand","height","CSidebarNav","SimpleBar","navigation","CSidebarToggler","DocsExample","props","CTabContent","CTabPane","AppHeader"],"sourceRoot":""}