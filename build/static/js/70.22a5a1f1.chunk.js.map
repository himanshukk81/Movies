{"version":3,"file":"static/js/70.22a5a1f1.chunk.js","mappings":"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","sources":["configuration/firebase.js","views/base/tables/Tables.js","views/pages/Movies/MovieList.js"],"sourcesContent":["import { initializeApp } from \"firebase/app\"\nimport { getFirestore } from \"firebase/firestore\"\n\nconst firebaseConfig = {\n    apiKey: \"AIzaSyBuQMPxnZU4_ndey6z8HcAhmCq8EWTY2mY\",\n    authDomain: \"midnightmovies-172cd.firebaseapp.com\",\n    projectId: \"midnightmovies-172cd\",\n    storageBucket: \"midnightmovies-172cd.appspot.com\",\n    messagingSenderId: \"1029441812049\",\n    appId: \"1:1029441812049:web:567458304e8209f34baa70\",\n    measurementId: \"G-D953DRM6LF\"\n}\n\n// Initialize Firebase and Firestore\nconst app = initializeApp(firebaseConfig)\nconst db = getFirestore(app)\nexport {db}\n","import React, { useEffect , useState } from 'react'\nimport {\n  CCard,\n  CCardBody,\n  CCardHeader,\n  CCol,\n  CRow,\n  CTable,\n  CTableBody,\n  CTableCaption,\n  CTableDataCell,\n  CTableHead,\n  CTableHeaderCell,\n  CTableRow,\n} from '@coreui/react';\nimport {\n  CButton\n} from '@coreui/react';\nimport { useNavigate } from 'react-router-dom';\n\nimport { DocsExample } from 'src/components'\nimport {db} from '../../../configuration/firebase';\nimport {collection, getDocs , addDoc , doc , deleteDoc , updateDoc} from \"firebase/firestore\"\n\nconst Tables = (props,{propsD}) => {\n  const navigate = useNavigate();\n  const [categories , setCategories] = useState([]);\n  const [movies , setMovies] = useState([]);\n\n  useEffect(()=>{\n    setCategories(props.categoryList);\n    setMovies(props.movieList);\n  });  \n\n  const deleteCategories = async (documentId) => {\n    try{\n        const docRef = doc(db, \"categories\", documentId);\n        deleteDoc(docRef)\n        .then(() => {\n            console.log(\"Entire Document has been deleted successfully.\")\n        }).catch((error)=>{\n            console.log(error);\n        })\n    }\n    catch(error){\n        console.log(error);\n    }\n  };\n\n  const deleteMovie = async (documentId) => {\n    console.log(documentId);\n    try{\n        const docRef = doc(db, \"movies\", documentId);\n        deleteDoc(docRef)\n        .then(() => {\n            console.log(\"Movie Deleted Successfully\")\n        }).catch((error)=>{\n            console.log(error);\n        })\n    }\n    catch(error){\n        console.log(error);\n    }\n  };\n\n  return (\n    <CRow>\n      <CCol xs={12}>\n        <CCard className=\"mb-4\">\n          <CCardBody>\n            <DocsExample href=\"components/table\">\n              {props.isCategory && categories && categories.length &&\n              \n              <CTable>\n                \n                <CTableHead>\n                  <CTableRow>\n                    <CTableHeaderCell scope=\"col\">#</CTableHeaderCell>\n                    <CTableHeaderCell scope=\"col\">Title</CTableHeaderCell>\n                    <CTableHeaderCell scope=\"col\">Action</CTableHeaderCell>\n                  </CTableRow>\n                </CTableHead>\n\n                {categories && categories.length &&<CTableBody>\n                  \n                  {categories.map((category,index)=>{\n                    return(\n                      <CTableRow>\n                      <CTableHeaderCell scope=\"row\">{index+1}</CTableHeaderCell>\n                      <CTableDataCell>{category?.title}</CTableDataCell>\n                      <CTableDataCell>\n                        <CButton \n                          color=\"primary\" \n                          active={true}\n                          onClick={()=>{\n                                  console.log(category);\n                                  navigate('/Category/AddCategory',{\n                                    state:category\n                                  });\n                          }}>\n                              Edit\n                        </CButton> \n                        <CButton color=\"link\" active={true}\n                          onClick={()=>{\n                                  console.log(category);\n                                  deleteCategories(category.id)\n                          }}>\n                              Delete\n                        </CButton>   \n                      </CTableDataCell>\n                    </CTableRow>\n                    )\n                  })}\n                  \n                </CTableBody>}\n\n              </CTable>}\n\n              {!props.isCategory && movies && movies.length &&<CTable>\n                \n                <CTableHead>\n                  <CTableRow>\n                    <CTableHeaderCell scope=\"col\">#</CTableHeaderCell>\n                    <CTableHeaderCell scope=\"col\">Title</CTableHeaderCell>\n                    <CTableHeaderCell scope=\"col\">Stars</CTableHeaderCell>\n                    <CTableHeaderCell scope=\"col\">Released</CTableHeaderCell>\n                    <CTableHeaderCell scope=\"col\">Runtime</CTableHeaderCell>\n                    <CTableHeaderCell scope=\"col\">Action</CTableHeaderCell>\n                  </CTableRow>\n                </CTableHead>\n\n                {movies && movies.length &&<CTableBody>\n                  \n                  {movies.map((movie ,index)=>{\n                    return(\n                      <CTableRow>\n                      <CTableHeaderCell scope=\"row\">{index+1}</CTableHeaderCell>\n                      <CTableDataCell>{movie?.title}</CTableDataCell>\n                      <CTableDataCell>{movie?.stars}</CTableDataCell>\n                      <CTableDataCell>{movie?.released}</CTableDataCell>\n                      <CTableDataCell>{movie?.runtime}</CTableDataCell>\n\n                      <CTableDataCell>\n                        <CButton color=\"link\" active={true}\n                          onClick={()=>{\n                                  navigate('/Movies/AddMovies',{\n                                    state:movie\n                                  });\n                          }}>\n                              Edit\n                        </CButton> \n\n                        <CButton color=\"link\" active={true}\n                          onClick={()=>{\n                                  deleteMovie(movie.id)\n                          }}>\n                              Delete\n                        </CButton>   \n\n                      </CTableDataCell>\n\n                    </CTableRow>\n                    )\n                  })}\n                  \n                </CTableBody>}\n\n              </CTable>}\n              \n            </DocsExample>\n          </CCardBody>\n        </CCard>\n      </CCol>\n\n    </CRow>\n  )\n}\n\nexport default Tables\n","import { useEffect, useState } from \"react\";\nimport Tables from \"src/views/base/tables/Tables\";\nimport { useNavigate } from 'react-router-dom';\nimport {collection, getDocs , addDoc , doc , deleteDoc , updateDoc} from \"firebase/firestore\"\nimport {db} from '../../../configuration/firebase';\n\nimport { CButton } from '@coreui/react';\nconst MovieList = () =>{\n    const navigate = useNavigate();\n\n    const [movies , setMovies ] = useState([]);\n    useEffect(()=>{\n        fetchMovies();\n    },);\n\n    const fetchMovies = async () =>{\n        console.log(\"fetch movies\");\n        try{\n            await getDocs(collection(db, 'movies')).then((querySnapshot)=>{\n                const movies = querySnapshot.docs.map((doc) => ({...doc.data(),id:doc.id}));\n                setMovies(movies);\n            });\n        }\n        catch(error){\n            console.log(error);\n        }\n    };\n\n    const navigateToMovies = () =>{\n        console.log(\"navigation movies\");\n        navigate('/Movies/AddMovies');\n    }\n    return (\n        <>\n            <div style={{display:'flex',justifyContent:'flex-end'}}>\n            \n                <CButton color=\"primary\" active={true}\n                    onClick={()=>{\n                            navigateToMovies();\n                    }}>\n                    Add Movies\n                </CButton>   \n            </div>\n            <br/>\n            \n            <Tables movieList={movies} isCategory={false}  />\n        </>\n    )\n}\n\nexport default MovieList;"],"names":["app","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","db","getFirestore","props","_ref","propsD","navigate","useNavigate","_useState","useState","_useState2","_slicedToArray","categories","setCategories","_useState3","_useState4","movies","setMovies","useEffect","categoryList","movieList","deleteCategories","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","documentId","docRef","wrap","_context","prev","next","doc","deleteDoc","then","console","log","catch","error","stop","_x","apply","arguments","deleteMovie","_ref3","_callee2","_context2","_x2","_jsx","CRow","children","CCol","xs","CCard","className","CCardBody","_jsxs","DocsExample","href","isCategory","length","CTable","CTableHead","CTableRow","CTableHeaderCell","scope","CTableBody","map","category","index","CTableDataCell","title","CButton","color","active","onClick","state","id","movie","stars","released","runtime","fetchMovies","getDocs","collection","querySnapshot","docs","_objectSpread","data","t0","_Fragment","style","display","justifyContent","Tables"],"sourceRoot":""}